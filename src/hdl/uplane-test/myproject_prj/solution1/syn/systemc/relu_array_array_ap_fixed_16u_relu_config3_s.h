// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _relu_array_array_ap_fixed_16u_relu_config3_s_HH_
#define _relu_array_array_ap_fixed_16u_relu_config3_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct relu_array_array_ap_fixed_16u_relu_config3_s : public sc_module {
    // Port declarations 106
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<16> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<16> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<16> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_in< sc_lv<16> > data_V_data_3_V_dout;
    sc_in< sc_logic > data_V_data_3_V_empty_n;
    sc_out< sc_logic > data_V_data_3_V_read;
    sc_in< sc_lv<16> > data_V_data_4_V_dout;
    sc_in< sc_logic > data_V_data_4_V_empty_n;
    sc_out< sc_logic > data_V_data_4_V_read;
    sc_in< sc_lv<16> > data_V_data_5_V_dout;
    sc_in< sc_logic > data_V_data_5_V_empty_n;
    sc_out< sc_logic > data_V_data_5_V_read;
    sc_in< sc_lv<16> > data_V_data_6_V_dout;
    sc_in< sc_logic > data_V_data_6_V_empty_n;
    sc_out< sc_logic > data_V_data_6_V_read;
    sc_in< sc_lv<16> > data_V_data_7_V_dout;
    sc_in< sc_logic > data_V_data_7_V_empty_n;
    sc_out< sc_logic > data_V_data_7_V_read;
    sc_in< sc_lv<16> > data_V_data_8_V_dout;
    sc_in< sc_logic > data_V_data_8_V_empty_n;
    sc_out< sc_logic > data_V_data_8_V_read;
    sc_in< sc_lv<16> > data_V_data_9_V_dout;
    sc_in< sc_logic > data_V_data_9_V_empty_n;
    sc_out< sc_logic > data_V_data_9_V_read;
    sc_in< sc_lv<16> > data_V_data_10_V_dout;
    sc_in< sc_logic > data_V_data_10_V_empty_n;
    sc_out< sc_logic > data_V_data_10_V_read;
    sc_in< sc_lv<16> > data_V_data_11_V_dout;
    sc_in< sc_logic > data_V_data_11_V_empty_n;
    sc_out< sc_logic > data_V_data_11_V_read;
    sc_in< sc_lv<16> > data_V_data_12_V_dout;
    sc_in< sc_logic > data_V_data_12_V_empty_n;
    sc_out< sc_logic > data_V_data_12_V_read;
    sc_in< sc_lv<16> > data_V_data_13_V_dout;
    sc_in< sc_logic > data_V_data_13_V_empty_n;
    sc_out< sc_logic > data_V_data_13_V_read;
    sc_in< sc_lv<16> > data_V_data_14_V_dout;
    sc_in< sc_logic > data_V_data_14_V_empty_n;
    sc_out< sc_logic > data_V_data_14_V_read;
    sc_in< sc_lv<16> > data_V_data_15_V_dout;
    sc_in< sc_logic > data_V_data_15_V_empty_n;
    sc_out< sc_logic > data_V_data_15_V_read;
    sc_out< sc_lv<16> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<16> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<16> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_lv<16> > res_V_data_3_V_din;
    sc_in< sc_logic > res_V_data_3_V_full_n;
    sc_out< sc_logic > res_V_data_3_V_write;
    sc_out< sc_lv<16> > res_V_data_4_V_din;
    sc_in< sc_logic > res_V_data_4_V_full_n;
    sc_out< sc_logic > res_V_data_4_V_write;
    sc_out< sc_lv<16> > res_V_data_5_V_din;
    sc_in< sc_logic > res_V_data_5_V_full_n;
    sc_out< sc_logic > res_V_data_5_V_write;
    sc_out< sc_lv<16> > res_V_data_6_V_din;
    sc_in< sc_logic > res_V_data_6_V_full_n;
    sc_out< sc_logic > res_V_data_6_V_write;
    sc_out< sc_lv<16> > res_V_data_7_V_din;
    sc_in< sc_logic > res_V_data_7_V_full_n;
    sc_out< sc_logic > res_V_data_7_V_write;
    sc_out< sc_lv<16> > res_V_data_8_V_din;
    sc_in< sc_logic > res_V_data_8_V_full_n;
    sc_out< sc_logic > res_V_data_8_V_write;
    sc_out< sc_lv<16> > res_V_data_9_V_din;
    sc_in< sc_logic > res_V_data_9_V_full_n;
    sc_out< sc_logic > res_V_data_9_V_write;
    sc_out< sc_lv<16> > res_V_data_10_V_din;
    sc_in< sc_logic > res_V_data_10_V_full_n;
    sc_out< sc_logic > res_V_data_10_V_write;
    sc_out< sc_lv<16> > res_V_data_11_V_din;
    sc_in< sc_logic > res_V_data_11_V_full_n;
    sc_out< sc_logic > res_V_data_11_V_write;
    sc_out< sc_lv<16> > res_V_data_12_V_din;
    sc_in< sc_logic > res_V_data_12_V_full_n;
    sc_out< sc_logic > res_V_data_12_V_write;
    sc_out< sc_lv<16> > res_V_data_13_V_din;
    sc_in< sc_logic > res_V_data_13_V_full_n;
    sc_out< sc_logic > res_V_data_13_V_write;
    sc_out< sc_lv<16> > res_V_data_14_V_din;
    sc_in< sc_logic > res_V_data_14_V_full_n;
    sc_out< sc_logic > res_V_data_14_V_write;
    sc_out< sc_lv<16> > res_V_data_15_V_din;
    sc_in< sc_logic > res_V_data_15_V_full_n;
    sc_out< sc_logic > res_V_data_15_V_write;


    // Module declarations
    relu_array_array_ap_fixed_16u_relu_config3_s(sc_module_name name);
    SC_HAS_PROCESS(relu_array_array_ap_fixed_16u_relu_config3_s);

    ~relu_array_array_ap_fixed_16u_relu_config3_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > data_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln60_reg_873;
    sc_signal< sc_logic > data_V_data_1_V_blk_n;
    sc_signal< sc_logic > data_V_data_2_V_blk_n;
    sc_signal< sc_logic > data_V_data_3_V_blk_n;
    sc_signal< sc_logic > data_V_data_4_V_blk_n;
    sc_signal< sc_logic > data_V_data_5_V_blk_n;
    sc_signal< sc_logic > data_V_data_6_V_blk_n;
    sc_signal< sc_logic > data_V_data_7_V_blk_n;
    sc_signal< sc_logic > data_V_data_8_V_blk_n;
    sc_signal< sc_logic > data_V_data_9_V_blk_n;
    sc_signal< sc_logic > data_V_data_10_V_blk_n;
    sc_signal< sc_logic > data_V_data_11_V_blk_n;
    sc_signal< sc_logic > data_V_data_12_V_blk_n;
    sc_signal< sc_logic > data_V_data_13_V_blk_n;
    sc_signal< sc_logic > data_V_data_14_V_blk_n;
    sc_signal< sc_logic > data_V_data_15_V_blk_n;
    sc_signal< sc_logic > res_V_data_0_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<1> > icmp_ln60_reg_873_pp0_iter1_reg;
    sc_signal< sc_logic > res_V_data_1_V_blk_n;
    sc_signal< sc_logic > res_V_data_2_V_blk_n;
    sc_signal< sc_logic > res_V_data_3_V_blk_n;
    sc_signal< sc_logic > res_V_data_4_V_blk_n;
    sc_signal< sc_logic > res_V_data_5_V_blk_n;
    sc_signal< sc_logic > res_V_data_6_V_blk_n;
    sc_signal< sc_logic > res_V_data_7_V_blk_n;
    sc_signal< sc_logic > res_V_data_8_V_blk_n;
    sc_signal< sc_logic > res_V_data_9_V_blk_n;
    sc_signal< sc_logic > res_V_data_10_V_blk_n;
    sc_signal< sc_logic > res_V_data_11_V_blk_n;
    sc_signal< sc_logic > res_V_data_12_V_blk_n;
    sc_signal< sc_logic > res_V_data_13_V_blk_n;
    sc_signal< sc_logic > res_V_data_14_V_blk_n;
    sc_signal< sc_logic > res_V_data_15_V_blk_n;
    sc_signal< sc_lv<7> > i_0_reg_578;
    sc_signal< sc_lv<1> > icmp_ln60_fu_589_p2;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< sc_logic > io_acc_block_signal_op44;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< sc_logic > io_acc_block_signal_op96;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<7> > i_fu_595_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<16> > tmp_data_V_0_reg_882;
    sc_signal< sc_lv<16> > tmp_data_V_1_reg_887;
    sc_signal< sc_lv<16> > tmp_data_V_2_reg_892;
    sc_signal< sc_lv<16> > tmp_data_V_3_reg_897;
    sc_signal< sc_lv<16> > tmp_data_V_421_reg_902;
    sc_signal< sc_lv<16> > tmp_data_V_5_reg_907;
    sc_signal< sc_lv<16> > tmp_data_V_6_reg_912;
    sc_signal< sc_lv<16> > tmp_data_V_7_reg_917;
    sc_signal< sc_lv<16> > tmp_data_V_8_reg_922;
    sc_signal< sc_lv<16> > tmp_data_V_9_reg_927;
    sc_signal< sc_lv<16> > tmp_data_V_10_reg_932;
    sc_signal< sc_lv<16> > tmp_data_V_11_reg_937;
    sc_signal< sc_lv<16> > tmp_data_V_12_reg_942;
    sc_signal< sc_lv<16> > tmp_data_V_13_reg_947;
    sc_signal< sc_lv<16> > tmp_data_V_14_reg_952;
    sc_signal< sc_lv<16> > tmp_data_V_15_reg_957;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_665_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_reg_962;
    sc_signal< sc_lv<1> > icmp_ln1494_1_fu_671_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_1_reg_967;
    sc_signal< sc_lv<1> > icmp_ln1494_2_fu_677_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_2_reg_972;
    sc_signal< sc_lv<1> > icmp_ln1494_3_fu_683_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_3_reg_977;
    sc_signal< sc_lv<1> > icmp_ln1494_4_fu_689_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_4_reg_982;
    sc_signal< sc_lv<1> > icmp_ln1494_5_fu_695_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_5_reg_987;
    sc_signal< sc_lv<1> > icmp_ln1494_6_fu_701_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_6_reg_992;
    sc_signal< sc_lv<1> > icmp_ln1494_7_fu_707_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_7_reg_997;
    sc_signal< sc_lv<1> > icmp_ln1494_8_fu_713_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_8_reg_1002;
    sc_signal< sc_lv<1> > icmp_ln1494_9_fu_719_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_9_reg_1007;
    sc_signal< sc_lv<1> > icmp_ln1494_10_fu_725_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_10_reg_1012;
    sc_signal< sc_lv<1> > icmp_ln1494_11_fu_731_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_11_reg_1017;
    sc_signal< sc_lv<1> > icmp_ln1494_12_fu_737_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_12_reg_1022;
    sc_signal< sc_lv<1> > icmp_ln1494_13_fu_743_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_13_reg_1027;
    sc_signal< sc_lv<1> > icmp_ln1494_14_fu_749_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_14_reg_1032;
    sc_signal< sc_lv<1> > icmp_ln1494_15_fu_755_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_15_reg_1037;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<7> ap_const_lv7_63;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_10_V_blk_n();
    void thread_data_V_data_10_V_read();
    void thread_data_V_data_11_V_blk_n();
    void thread_data_V_data_11_V_read();
    void thread_data_V_data_12_V_blk_n();
    void thread_data_V_data_12_V_read();
    void thread_data_V_data_13_V_blk_n();
    void thread_data_V_data_13_V_read();
    void thread_data_V_data_14_V_blk_n();
    void thread_data_V_data_14_V_read();
    void thread_data_V_data_15_V_blk_n();
    void thread_data_V_data_15_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_data_V_data_3_V_blk_n();
    void thread_data_V_data_3_V_read();
    void thread_data_V_data_4_V_blk_n();
    void thread_data_V_data_4_V_read();
    void thread_data_V_data_5_V_blk_n();
    void thread_data_V_data_5_V_read();
    void thread_data_V_data_6_V_blk_n();
    void thread_data_V_data_6_V_read();
    void thread_data_V_data_7_V_blk_n();
    void thread_data_V_data_7_V_read();
    void thread_data_V_data_8_V_blk_n();
    void thread_data_V_data_8_V_read();
    void thread_data_V_data_9_V_blk_n();
    void thread_data_V_data_9_V_read();
    void thread_i_fu_595_p2();
    void thread_icmp_ln1494_10_fu_725_p2();
    void thread_icmp_ln1494_11_fu_731_p2();
    void thread_icmp_ln1494_12_fu_737_p2();
    void thread_icmp_ln1494_13_fu_743_p2();
    void thread_icmp_ln1494_14_fu_749_p2();
    void thread_icmp_ln1494_15_fu_755_p2();
    void thread_icmp_ln1494_1_fu_671_p2();
    void thread_icmp_ln1494_2_fu_677_p2();
    void thread_icmp_ln1494_3_fu_683_p2();
    void thread_icmp_ln1494_4_fu_689_p2();
    void thread_icmp_ln1494_5_fu_695_p2();
    void thread_icmp_ln1494_6_fu_701_p2();
    void thread_icmp_ln1494_7_fu_707_p2();
    void thread_icmp_ln1494_8_fu_713_p2();
    void thread_icmp_ln1494_9_fu_719_p2();
    void thread_icmp_ln1494_fu_665_p2();
    void thread_icmp_ln60_fu_589_p2();
    void thread_internal_ap_ready();
    void thread_io_acc_block_signal_op44();
    void thread_io_acc_block_signal_op96();
    void thread_real_start();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_10_V_blk_n();
    void thread_res_V_data_10_V_din();
    void thread_res_V_data_10_V_write();
    void thread_res_V_data_11_V_blk_n();
    void thread_res_V_data_11_V_din();
    void thread_res_V_data_11_V_write();
    void thread_res_V_data_12_V_blk_n();
    void thread_res_V_data_12_V_din();
    void thread_res_V_data_12_V_write();
    void thread_res_V_data_13_V_blk_n();
    void thread_res_V_data_13_V_din();
    void thread_res_V_data_13_V_write();
    void thread_res_V_data_14_V_blk_n();
    void thread_res_V_data_14_V_din();
    void thread_res_V_data_14_V_write();
    void thread_res_V_data_15_V_blk_n();
    void thread_res_V_data_15_V_din();
    void thread_res_V_data_15_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_res_V_data_3_V_blk_n();
    void thread_res_V_data_3_V_din();
    void thread_res_V_data_3_V_write();
    void thread_res_V_data_4_V_blk_n();
    void thread_res_V_data_4_V_din();
    void thread_res_V_data_4_V_write();
    void thread_res_V_data_5_V_blk_n();
    void thread_res_V_data_5_V_din();
    void thread_res_V_data_5_V_write();
    void thread_res_V_data_6_V_blk_n();
    void thread_res_V_data_6_V_din();
    void thread_res_V_data_6_V_write();
    void thread_res_V_data_7_V_blk_n();
    void thread_res_V_data_7_V_din();
    void thread_res_V_data_7_V_write();
    void thread_res_V_data_8_V_blk_n();
    void thread_res_V_data_8_V_din();
    void thread_res_V_data_8_V_write();
    void thread_res_V_data_9_V_blk_n();
    void thread_res_V_data_9_V_din();
    void thread_res_V_data_9_V_write();
    void thread_start_out();
    void thread_start_write();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
